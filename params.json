{"name":"Swagger-maven-plugin","tagline":"A maven build plugin which helps you generate Swagger JSON and API document during build phase","body":"# Swagger Maven Plugin [![Build Status](https://travis-ci.org/kongchen/swagger-maven-plugin.png)](https://travis-ci.org/kongchen/swagger-maven-plugin)\r\n\r\n# Versions\r\n- [3.0-M1](https://github.com/kongchen/swagger-maven-plugin/tree/dev2.0) supports Swagger Spec [2.0](https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md) (**DRAFT**)\r\n- [2.3.4](https://github.com/kongchen/swagger-maven-plugin/) supports Swagger Spec [1.2](https://github.com/swagger-api/swagger-spec/blob/master/versions/1.2.md), support JAX-RS & SpringMVC.(**ACTIVE**).\r\n- [1.1.1](https://github.com/kongchen/swagger-maven-plugin/tree/1.1.1) supports Swagger Spec 1.1. (**No longer maintained**)\r\n\r\nThis plugin can let your Swagger annotated project generate **Swagger JSON** and your **customized API documents** in build phase.\r\n\r\nYou must already known what is Swagger JSON, check the results of this plugin generates [here](https://github.com/kongchen/swagger-maven-example/tree/master/generated/swagger-ui) to see if it is what you want.\r\n\r\nWhat is *customized API document*? Here're a screenshot:\r\n<img src=\"https://cloud.githubusercontent.com/assets/1485800/4130438/28359ea4-3337-11e4-8c1a-5d9b06854e3f.png\" width=\"50%\" align='center'/>\r\n\r\n# Usage\r\nImport the plugin in your project by adding following configuration in your `plugins` block:\r\n```xml\r\n<build>\r\n    <plugins>\r\n        <plugin>\r\n            <groupId>com.github.kongchen</groupId>\r\n            <artifactId>swagger-maven-plugin</artifactId>\r\n            <version>${swagger-maven-plugin-version}</version>\r\n            <configuration>\r\n                ...\r\n            </configuration>\r\n        </plugin>\r\n    </plugins>\r\n</build>\r\n```\r\nDeveloped with ![IntelliJ IDEA](https://www.jetbrains.com/idea/docs/logo_intellij_idea.png)","google":"UA-5680351-7","note":"Don't delete this file! It's used internally to help with page regeneration."}